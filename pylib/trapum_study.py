from pylib.pulsar_pop import *

def table1():
    q = """J0048.6−6347 0.53 59034.2131 53 114 135 59196.6117 50 88 97
    J0139.5−2228 0.29 59123.8042 53 110 142 59196.6191 50 94 112
    J0251.1−1830 0.13 59034.206 52 112 136 59202.7276 49 78 89
    J0312.1−0921† 0.94 59034.1976 52 112 132 59202.7204 49 86 95
    J0414.7−4300 0.45 59034.1435 52 113 136 59202.6874 49 92 106
    J0529.9−0224 0.3 59065.4275 49 120 144 59188.1007 51 97 117
    J0540.0−7552‡ 0.19 59034.221 52 113 138 59188.1084 50 89 105
    J0657.4−4658 0.26 59065.4594 50 121 142 59188.1538 50 96 115
    J0712.0−6431 0.17 59065.5499 50 122 189 59188.161 49 99 118
    J0802.1−5612† 0.91 59065.444 52 128 148 59182.2759 54 94 108
    J0940.3−7610‡ 0.94 59065.4674 51 126 144 59188.1155 50 81 93
    J0953.6−1509 0.89 59065.4514 49 118 137 59182.2831 53 94 112
    J1036.6−4349∗ 0.45 59065.4908 53 130 148 59182.3887 54 94 112
    J1106.7−1742 0.57 59065.498 50 122 140 59182.3508 53 94 113
    J1120.0−2204‡ 0.75 59065.5058 52 126 143 59188.1761 49 64 74
    J1126.0−5007 0.21 59065.4357 50 119 224 59182.412 54 95 111
    J1204.5−5032 0.5 59020.8389 50 113 182 59188.0925 51 99 115
    J1207.4−4536 0.7 59065.4835 52 127 152 59250.2806 54 103 126
    J1213.9−4416 0.23 59065.5129 51 122 140 59188.1316 50 87 99
    J1231.6−5116† 0.96 59065.528 53 130 152 — — — —
    J1303.1−4714 0.15 59065.4207 67 159 248 59188.1244 51 103 121
    J1345.9−2612 0.34 59065.4747 49 116 133 59188.1389 51 94 113
    J1400.0−2415 0.91 59020.7561 50 117 134 59188.1461 51 87 100
    J1416.7−5023 0.55 59020.7634 53 125 147 59188.1686 54 95 108
    J1450.8−1424 0.14 59065.5427 52 130 158 59188.1981 51 96 111
    J1458.8−2120 0.46 59065.5578 51 122 139 59188.1909 51 83 95
    J1513.7−1519 0.19 59020.7276 51 120 143 59188.2053 52 91 103
    J1517.7−4446 0.24 59065.5205 57 143 168 59188.1837 55 109 130
    J1526.6−2743∗ 0.68 59020.7346 51 120 140 — — — —
    J1526.6−3810 0.23 59065.5353 57 140 168 59188.2124 55 110 132
    J1539.4−3323 0.9 59020.7418 52 116 140 59182.3427 57 100 116
    J1543.6−0244 0.83 59182.3063 54 94 109 59250.3519 55 104 125
    J1544.2−2554 0.59 59020.749 51 120 138 59196.4976 52 86 97
    J1612.1+1407 0.84 59020.7713 52 123 144 59196.4842 66 114 129
    J1622.2−7202 0.37 59065.5655 53 130 153 59182.2916 54 95 112
    J1623.9−6936∗ 0.17 59020.7123 51 119 137 59196.5798 51 83 94
    J1630.1−1049 0.57 59020.8087 51 122 166 59182.2992 56 98 114
    J1646.7−2154 0.17 59020.7198 53 127 175 59182.3136 58 102 270
    J1656.4−0410 0.18 59123.674 134 271 337 59182.3591 55 97 112
    J1659.0−0140 0.61 59123.7308 57 116 146 59182.3735 56 99 114
    J1709.4−0328∗ 0.13 59123.7082 57 117 147 59196.5426 53 98 112
    J1711.9−1922 0.35 59020.8238 54 127 154 59196.5498 54 90 101
    J1717.5−5804 0.66 59020.7791 54 126 147 59196.603 55 92 103
    J1720.6+0708 0.6 59020.7944 53 124 144 59196.521 54 97 112
    J1722.8−0418 0.29 59123.7452 58 118 147 59196.557 53 85 96
    J1727.4+0326 0.13 59182.3663 57 99 115 59250.3446 57 119 138
    J1730.4−0359 0.86 59123.738 58 118 150 59196.5641 54 82 95
    J1735.3−0717 0.32 59123.7816 59 119 147 59196.5956 55 99 112
    J1747.6+0324 0.46 59123.7673 59 121 152 59182.3969 59 103 122
    J1749.8−0303 0.22 59020.8015 55 128 146 59196.5884 56 95 105
    J1757.7−6032∗ 0.84 59020.8314 52 121 140 59182.321 56 100 120
    J1803.1−6708∗ 0.23 59020.8161 51 118 138 — — — —
    J1813.7−6846 0.12 59123.6858 56 115 146 59182.3281 55 98 118
    J1816.4−6405 0.47 59123.6931 57 116 148 59182.3353 56 99 120
    J1816.7+1749 0.2 59123.7009 58 118 147 59196.5063 53 94 105
    J1818.6+1316 0.77 59123.7601 57 118 147 59196.5282 53 92 104
    J1822.9−4718 0.2 59123.7159 56 117 145 59202.6346 55 94 104
    J1823.8−3544∗ 0.13 59034.0991 58 125 150 —
    J1824.2−5427 0.61 59123.6786 55 114 143 59182.3811 55 96 111
    J1827.5+1141 0.96 59123.7744 59 121 151 59196.5354 55 92 103
    J1831.1−6503 0.67 59123.7231 55 114 143 59202.6716 52 73 85
    J1845.8−2521 0.85 59123.8123 61 124 155 59202.6571 56 96 107
    J1858.3−5424∗ 0.71 59034.1361 54 118 140 — — — —
    J1906.0−1718 0.33 59034.1066 57 123 150 59182.4041 57 101 123
    J1906.4−1757∗ 0.14 59123.7962 58 120 151 — — — —
    J1913.4−1526 0.51 59123.789 58 120 150 59202.6428 54 95 105
    J1916.8−3025 0.59 59123.7525 57 117 147 59202.6643 53 72 84
    J1924.8−1035 0.78 59202.65 54 83 95 59250.31 59 102 128
    J1947.6−1121 0.18 59034.1285 55 118 142 59202.6791 52 89 100
    J2026.3+1431 0.19 59196.5136 51 90 100 59250.3282 55 110 130
    J2043.9−4802 0.87 59034.1757 53 116 143 59202.7498 51 77 88
    J2112.5−3043 0.96 59034.183 53 115 138 59202.6952 50 60 67
    J2121.8−3412 0.23 59034.2283 53 114 141 59202.757 50 94 111
    J2133.1−6432 0.77 59034.1903 53 115 137 59202.7354 50 81 91
    J2201.0−6928 0.41 59034.1214 53 113 133 59202.7426 50 86 95
    J2212.4+0708 0.92 59034.1595 53 113 133 59202.7041 50 87 99
    J2219.7−6837 0.52 59034.1138 53 114 135 59196.4899 50 78 90
    J2241.4−8327 0.33 59034.152 53 113 132 59202.7119 50 87 96
    J2355.5−6614 0.24 59034.1679 53 115 137 59196.5724 50 91 104""".split('\n')

    names = ['4FGL '+line.split()[0] for line in q if len(line)>0]
    return list(filter(lambda n: len(n)==17, names))

def introduction():
    show("""# Check the TRAPUM L-band survey list""")
    show_date()
    show(""" [reference](https://arxiv.org/abs/2212.08528)

         """)

introduction()
def check_the99(data):
    names = table1()
    show(f"""Got {len(names)} 4FGL names from Table I""")

    df = SpecialCut()(data).query('pulsar_type=="predicted"')
    show(f"""Loaded the special selection (the "99") from the psr-predicted unassociated, {len(df)} total.""")
    a,b, c  = set(names), set(data.index), set(df.index)
    d = data.loc[list(a.intersection(b))]

    show(f"""There are {len(d)} in my predicted psr list:<br>  {list(d.index)} """)
    show(f"""The number in the "99" set:  {len(a.intersection(c))}""")

